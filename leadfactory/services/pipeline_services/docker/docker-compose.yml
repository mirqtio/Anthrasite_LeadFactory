version: '3.8'

services:
  # Redis for caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Kafka for message queues
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 30s
      timeout: 10s
      retries: 3

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: ["CMD", "echo", "ruok", "|", "nc", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Pipeline Services
  scrape-service:
    build:
      context: ../../../..
      dockerfile: leadfactory/services/pipeline_services/docker/Dockerfile.scrape
    ports:
      - "8001:8001"
    environment:
      - SERVICE_NAME=scrape
      - SERVICE_PORT=8001
      - REDIS_URL=redis://redis:6379/0
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    depends_on:
      - redis
      - kafka
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  enrich-service:
    build:
      context: ../../../..
      dockerfile: leadfactory/services/pipeline_services/docker/Dockerfile.enrich
    ports:
      - "8002:8002"
    environment:
      - SERVICE_NAME=enrich
      - SERVICE_PORT=8002
      - REDIS_URL=redis://redis:6379/1
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    depends_on:
      - redis
      - kafka
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  dedupe-service:
    build:
      context: ../../../..
      dockerfile: leadfactory/services/pipeline_services/docker/Dockerfile.dedupe
    ports:
      - "8003:8003"
    environment:
      - SERVICE_NAME=dedupe
      - SERVICE_PORT=8003
      - REDIS_URL=redis://redis:6379/2
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    depends_on:
      - redis
      - kafka
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  score-service:
    build:
      context: ../../../..
      dockerfile: leadfactory/services/pipeline_services/docker/Dockerfile.score
    ports:
      - "8004:8004"
    environment:
      - SERVICE_NAME=score
      - SERVICE_PORT=8004
      - REDIS_URL=redis://redis:6379/3
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    depends_on:
      - redis
      - kafka
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  mockup-service:
    build:
      context: ../../../..
      dockerfile: leadfactory/services/pipeline_services/docker/Dockerfile.mockup
    ports:
      - "8005:8005"
    environment:
      - SERVICE_NAME=mockup
      - SERVICE_PORT=8005
      - REDIS_URL=redis://redis:6379/4
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    depends_on:
      - redis
      - kafka
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8005/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  email-service:
    build:
      context: ../../../..
      dockerfile: leadfactory/services/pipeline_services/docker/Dockerfile.email
    ports:
      - "8006:8006"
    environment:
      - SERVICE_NAME=email
      - SERVICE_PORT=8006
      - REDIS_URL=redis://redis:6379/5
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    depends_on:
      - redis
      - kafka
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8006/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Orchestrator
  orchestrator:
    build:
      context: ../../../..
      dockerfile: leadfactory/services/pipeline_services/docker/Dockerfile.orchestrator
    ports:
      - "8000:8000"
    environment:
      - SERVICE_NAME=orchestrator
      - SERVICE_PORT=8000
      - REDIS_URL=redis://redis:6379/6
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    depends_on:
      - redis
      - kafka
      - scrape-service
      - enrich-service
      - dedupe-service
      - score-service
      - mockup-service
      - email-service
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis_data:

networks:
  default:
    driver: bridge